{"version":3,"sources":["webpack:///webpack/bootstrap d7a2b9db7024509e590d","webpack:///./src/recorder/client/index.js","webpack:///./src/recorder/client/send-queue.js","webpack:///./src/utils/ajax.js"],"names":["postQueue","queue","console","log","res","methods","sendAjaxRequest","method","url","body","cb","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","DONE","status","responseText","send","JSON","stringify","x","screenX","y","screenY"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACtCA;;;;;;;;;;;;;;;;ACKA;;AAEA,KAAMA,YAAY,SAAZA,SAAY,QAAS;AACzB,8BAAgB,MAAhB,EAAwB,2BAAxB,EAAqDC,KAArD,EAA4D,eAAO;AACjEC,aAAQC,GAAR,CAAY,MAAZ,EAAoBC,GAApB;AACD,IAFD;AAGD,EAJD,C,CAPA;AACA;AACA;AACA;AACA;mBASeJ,S;;;;;;;;ACbf,KAAMK,UAAU,CAAC,KAAD,EAAQ,MAAR,EAAgB,MAAhB,EAAwB,KAAxB,EAA+B,QAA/B,EAAyC,SAAzC,EAAoD,SAApD,EAA+D,OAA/D,CAAhB;;AAEA,KAAMC,kBAAkB,SAAlBA,eAAkB,CAACC,MAAD,EAASC,GAAT,EAAcC,IAAd,EAAoBC,EAApB,EAA2B;AACjDR,WAAQC,GAAR,CAAY,eAAZ,EAA6BM,IAA7B;AACA,OAAME,MAAM,IAAIC,cAAJ,EAAZ;;AAEAD,OAAIE,IAAJ,CAASN,MAAT,EAAiBC,GAAjB,EAAsB,IAAtB;AACAG,OAAIG,gBAAJ,CAAqB,cAArB,EAAqC,gCAArC;AACAH,OAAII,kBAAJ,GAAyB,YAAM;AAC7B,SAAIJ,IAAIK,UAAJ,KAAmBJ,eAAeK,IAAtC,EAA4C;AAC1C,WAAIN,IAAIK,UAAJ,IAAkB,CAAlB,IAAuBL,IAAIO,MAAJ,IAAc,GAAzC,EAA8C;AAC5CR,YAAGC,IAAIQ,YAAP;AACD;AACF;AACF,IAND;;AAQAR,OAAIS,IAAJ,CAASC,KAAKC,SAAL,CAAe;AACtBC,QAAGd,KAAKe,OADc;AAEtBC,QAAGhB,KAAKiB;AAFc,IAAf,CAAT;AAID,EAlBD,C","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d7a2b9db7024509e590d","import postQueue from './send-queue'\n\n\n// WEBPACK FOOTER //\n// ./src/recorder/client/index.js","// POST queue to endpoint, \n// create new queue at same time as POST\n// keep old queue in memory on client until get successful call back\n// then delete the old queue\n// add retry logic in case it fails, then delete on success\nimport { sendAjaxRequest } from '../../utils/ajax'\n\nconst postQueue = queue => {\n  sendAjaxRequest('POST', 'localhost:3000/recordings', queue, res => {\n    console.log('res:', res)\n  })\n}\n\nexport default postQueue\n\n\n// WEBPACK FOOTER //\n// ./src/recorder/client/send-queue.js","const methods = ['GET', 'HEAD', 'POST', 'PUT', 'DELETE', 'CONNECT', 'OPTIONS', 'PATCH']\n\nconst sendAjaxRequest = (method, url, body, cb) => {\n  console.log('body from xhr', body)\n  const xhr = new XMLHttpRequest()\n\n  xhr.open(method, url, true)\n  xhr.setRequestHeader('Content-Type', 'application/json;charset=UTF-8')\n  xhr.onreadystatechange = () => {\n    if (xhr.readyState === XMLHttpRequest.DONE) {\n      if (xhr.readyState == 4 && xhr.status == 200) {\n        cb(xhr.responseText)\n      }\n    }\n  }\n\n  xhr.send(JSON.stringify({\n    x: body.screenX,\n    y: body.screenY\n  }))\n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/ajax.js"],"sourceRoot":""}